#!/bin/bash

#abort in error
set -e

function usage
{
  echo "usage: $(basename "$0") -l LOCATION_PATH -r REPO -d DISTRIBUTION -c 'LIST OF COMPONENTS'"
  echo "example: $(basename "$0") -l /var/www/html -r debian -d stable -c 'main contrib non-free'"
  echo "   ";
  echo "  -l , --location       : The filesystem location where the repository is located.";
  echo "                          Default: /var/www/html";
  echo "  -r , --repository     : The repo specifies what repository will be updated.";
  echo "                          Default: debian";
  echo "  -d , --distribution   : The distribution specifies what subdirectory in dists will be updated.";
  echo "                          Default: stable";
  echo "  -c , --components     : The components specifies what subdirectories in dists/\$distribution will be updated.";
  echo "                          Default: All components found in \$location/\$repository/dists/\$distribution/Release file";
  echo "  -h , --help           : This mensage";
}

function parse_args
{
  args=()

  # named args
  while [ "$1" != "" ]; do
    case "$1" in
      -l | --location )            LOCATION="$2";               shift;;
      -r | --repository )          REPO="$2";                   shift;;
      -d | --distribution )        DISTRIBUTION="$2";           shift;;
      -c | --components )          COMPONENTS="$2";             shift;;
      -h | --help )                usage;                       exit;; # quit and show usage
      * )                          usage;                       exit;; # if no match, add it to the positional args
    esac
    shift
  done
  set -- "${args[@]}"

  # set default values
  if [[ -z "$LOCATION" ]]; then
    LOCATION="/var/www/html";
  fi
  if [[ -z "$REPO" ]]; then
    REPO="debian";
  fi
  if [[ -z "$DISTRIBUTION" ]]; then
    DISTRIBUTION="stable";
  fi
  if [[ -z "$COMPONENTS" ]]; then
    COMPONENTS=$(cat $LOCATION/$REPO/dists/$DISTRIBUTION/Release | \
      grep Components | \
      cut -d ":" -f2);
  fi
}

function main
{
  parse_args "$@"

  for COMP in $COMPONENTS; do
    cd $LOCATION/$REPO
    ARCHITECTURES=$(ls -d dists/$REPO/$COMP/binary* | cut -d"-" -f2)
    for ARCH in $ARCHITECTURES; do
      apt-ftparchive -a $ARCH packages pool/$DISTRIBUTION/$COMP > $LOCATION/$REPO/dists/$DISTRIBUTION/$COMP/binary-$ARCH/Packages
      gzip -kf $LOCATION/$REPO/dists/$DISTRIBUTION/$COMP/binary-$ARCH/Packages
    done
  done

  for COMP in $COMPONENTS; do
    cd $LOCATION/$REPO
    ARCHITECTURES=$(ls -d dists/$REPO/$COMP/binary* | cut -d"-" -f2)
    for ARCH in $ARCHITECTURES; do
      cd $LOCATION/$REPO/dists/$DISTRIBUTION/$COMP/binary-$ARCH
      apt-ftparchive release -c release.conf > Release
    done
  done

  cd $LOCATION/$REPO/dists/$DISTRIBUTION
  apt-ftparchive release -c release.conf . > Release

  echo "All done!"
}

main "$@";

