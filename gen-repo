#!/bin/bash

#abort in error
set -e

function usage
{
  echo "usage: $(basename "$0") -l LOCATION_PATH -u URI -d DISTRIBUTION -c 'LIST OF COMPONENTS' -a 'LIST OF ARCHITECTURE'"
  echo "example: $(basename "$0") -l /var/www/html -u http://localhost/debian -d stable -c 'main contrib non-free' -a 'i386 amd64 all'"
  echo "   ";
  echo "  -l , --location       : The filesystem location where the repository will be create.";
  echo "                          Default: /var/www/html";
  echo "  -u , --uri            : The uri specifies the root of the archive.";
  echo "                          Default: http://localhost/debian";
  echo "  -d , --distribution   : The distribution specifies a subdirectory in \$uri/dists.";
  echo "                          Default: stable";
  echo "  -c , --components     : The components specifies the subdirectories in \$uri/dists/\$distribution.";
  echo "                          Default: main contrib non-free";
  echo "  -a , --architectures  : The architectures of repository";
  echo "                          Default: i386 amd64 all";
  echo "                          Note: Architecture all is always created.";
  echo "  -h , --help           : This mensage";
}

function parse_args
{
  args=()

  # named args
  while [ "$1" != "" ]; do
    case "$1" in
      -l | --location )            LOCATION="$2";               shift;;
      -u | --uri )                 URI="$2";                    shift;;
      -d | --distribution )        DISTRIBUTION="$2";           shift;;
      -c | --components )          COMPONENTS="$2";             shift;;
      -a | --architectures)        ARCHITECTURES="$2";          shift;;
      -h | --help )                usage;                       exit;; # quit and show usage
      * )                          usage;                       exit;; # if no match, add it to the positional args
    esac
    shift
  done
  set -- "${args[@]}"

  # set default values
  if [[ -z "$LOCATION" ]]; then
    LOCATION="/var/www/html";
  fi
  if [[ -z "$URI" ]]; then
    URI="http://localhost/debian";
  fi
  if [[ -z "$DISTRIBUTION" ]]; then
    DISTRIBUTION="stable";
  fi
  if [[ -z "$COMPONENTS" ]]; then
    COMPONENTS="main contrib non-free";
  fi
  if [[ -z "$ARCHITECTURES" ]]; then
    ARCHITECTURES="i386 amd64 all";
  else
    ARCHITECTURES=$ARCHITECTURES" all";
  fi
}

function main
{
  parse_args "$@"

  echo $URI | grep -qo "http://"
  GREP_RESULT=$?
  if [ $GREP_RESULT -ne 0 ]; then
    URI="http://${URI}"
  fi

  URI_SLASHES=$(echo $URI | grep -o "/" | wc -l)
  if [ $URI_SLASHES -lt 3 ]; then
    echo "Invalid URL"
    exit 1
  else
    REPO=$(echo $URI | cut -f 4- -d/)
  fi

  mkdir -p $LOCATION/$REPO/{dists,pool}

  for COMP in $COMPONENTS; do
    for ARCH in $ARCHITECTURES; do
      mkdir -p $LOCATION/$REPO/dists/$DISTRIBUTION/$COMP/binary-$ARCH
cat << EOF > $LOCATION/$REPO/dists/$DISTRIBUTION/$COMP/binary-$ARCH/release.conf
APT::FTPArchive::Release::Codename "$DISTRIBUTION";
APT::FTPArchive::Release::Components "$COMP";
APT::FTPArchive::Release::Label "Debian Caixa Economica Federal";
APT::FTPArchive::Release::Architectures "$ARCH";
EOF
    done
    mkdir -p $LOCATION/$REPO/pool/$DISTRIBUTION/$COMP
  done

cat << EOF > $LOCATION/$REPO/dists/$DISTRIBUTION/release.conf
APT::FTPArchive::Release::Codename "$DISTRIBUTION";
APT::FTPArchive::Release::Components "$COMPONENTS";
APT::FTPArchive::Release::Label "Debian Caixa Economica Federal";
APT::FTPArchive::Release::Architectures "$ARCHITECTURES";
EOF

  for COMP in $COMPONENTS; do
    for ARCH in $ARCHITECTURES; do
      cd $LOCATION/$REPO
      apt-ftparchive -a $ARCH packages pool/$DISTRIBUTION/$COMP > $LOCATION/$REPO/dists/$DISTRIBUTION/$COMP/binary-$ARCH/Packages
      gzip -kf $LOCATION/$REPO/dists/$DISTRIBUTION/$COMP/binary-$ARCH/Packages
    done
  done

  for COMP in $COMPONENTS; do
    for ARCH in $ARCHITECTURES; do
      cd $LOCATION/$REPO/dists/$DISTRIBUTION/$COMP/binary-$ARCH
      apt-ftparchive release -c release.conf . > Release
    done
  done

  cd $LOCATION/$REPO/dists/$DISTRIBUTION
  apt-ftparchive release -c release.conf . > Release

  echo "All done!"
  echo "Put this in your source.list"
  echo "deb [trusted=yes] $URI $DISTRIBUTION $COMPONENTS"
}

main "$@";

